Matlab exercise(The matrix can be defined by yourself):

1.Familiar with Matlab interface and basic grammar(Learn by myself)

2.Matrix application
(1)Generate a two-dimensional random array with 100 rows and 200 columns
(2)Find the single subscripts of all elements greater than 0.49 and less than 0.51 in array A
(3)How many elements in array A satisfy the condition in (2)
(4)Find the sum of the elements in the array A that meet the conditions in (2), and find the average of these elements
(5)Assign the average value obtained in (4) to each element in the array A that meets the condition in (1)
(6)Find all prime numbers between 100 and 200 and store these prime numbers in a row array
(7)Calculate the sum of prime numbers in (6)
(8)Calculate the sum of all non-prime numbers between 100 and 200 (including 100 and 200)

3.Learn about plot/scatter/bar/hist/pie/surface/contour/imshow/imagesc/mesh/surf/contour3/contour3

4.y = [0.7+2*cos(x)/(1+x^2)]*sin(x), write a matlab program, the requirements are as follows:
(1)In the interval [0,2], take a value of x every 0.01 to calculate the corresponding function value of y;
(2)According to the data calculated by MATLAB, find the coordinates of the minimum value of the function in [0,2]

5.Use for and while loop statements to calculate K = Σ2^i (i=0, n=63) programs. 
(More)Please also write a calculation program that avoids loops. (Do not use the symsum function)

6.Write MATLAB script to output "number of daffodils" and the number of daffodils. The so-called "daffodil number" is a three-digit number, 
and the sum of the cubes of the digits is equal to the number itself.(For example, 153 = 1^3+5^3+3^3)

7.Use of find function(Try to use its function,write your own demo)

8.Draw the curve y=x^3+x+1, the value range of x is [-5,5]

9.y=sin(x), x from 0 to 2*Pi, dx=0.02, find the maximum, minimum, mean and standard deviation of y

10.Writing function modules(Call your own function):
Function input parameters: a vector

Function output parameter: the sum of all elements greater than 0 in the vector

Function: Find the sum of all elements greater than 0 in the vector (Example of function call: s=fun([-1, 0, 2, 3, -5, 4]))

11.Use Matlab to generate DLL files and call them with C++

12.Compile the C++ program into a mex file and call it by matlab

13.Convert script file to C++ file using matlab Coder and call them with C++ （Matlab Function:interp2）

14.UI Design Application
(1)One button loads the image and displays it
(2)Visualize 3D images
(3)Add various noises to images
(4)Realize different filtering methods in the frequency domain and can display


ANSWER 
2.
A = rand(100,200);
indices = find(A > 0.49 & A < 0.51);
B = length(indices);
sum_elemants = sum(A(indices));  average = mean(A(indices));
A(indices) = average;
primes_array = primes(200);
primes_array = primes_array(primes_array >= 100);
sum_primes = sum(primes_array);
nums = 100:200;
non_primes = setdiff(nums, primes_array);
sum_non = sum(non_primes);

3.

4.

5.
%% using for loop
K_for = 0;
for i = 0:63;
    K_for = K_for + 2^i;
end
disp(['sum using for: ', num2str(K_for)]);
% using for while
K_while = 0;
i = 0;
while i <= 63;
    K_while = K_while + 2^i;
    i = i + 1;
end
disp(['sum using while: ', num2str(K_while)]);
% without using loop
n = 63;
K_non = 2^(n+1) - 1;
disp(['sum without loop: ', num2str(K_non)]);

6.
nums = [];
for num = 100:999
    hundreds = floor(num/100);
    tens = floor(mod(num, 100)/10);
    units = mod(num, 10);

    if(hundreds^3 + tens^3 + units^3) == num
        nums = [nums, num];
    end
end   
disp(length(nums));
disp(nums);

7.
X = [1 0 2; 0 1 5; 7 4 2];

%查找非0元素索引
indics = find(X);
disp(indics);

%查找大于1的元素的索引
M = find(1 < X < 4)
disp(M);

%查找矩阵中为0的下标
[row, col] = find(X == 0);
disp([row, col]);


